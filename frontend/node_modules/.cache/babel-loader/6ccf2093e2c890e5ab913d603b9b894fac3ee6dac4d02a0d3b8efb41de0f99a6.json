{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-ranking-system\\\\frontend\\\\src\\\\components\\\\UserManager.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const UserManager = () => {\n//     const [users, setUsers] = useState([]);\n//     const [newUserName, setNewUserName] = useState('');\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get('/api/users');\n//                 setUsers(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching users:', error);\n//             }\n//         };\n\n//         fetchUsers();\n//     }, []);\n\n//     const handleAddUser = async () => {\n//         if (newUserName.trim()) {\n//             try {\n//                 const response = await axios.post('/api/users', { name: newUserName });\n//                 setUsers([...users, response.data]);\n//                 setNewUserName('');\n//             } catch (error) {\n//                 console.error('Error adding user:', error);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>User Manager</h2>\n//             <input\n//                 type=\"text\"\n//                 value={newUserName}\n//                 onChange={(e) => setNewUserName(e.target.value)}\n//                 placeholder=\"Enter new user name\"\n//             />\n//             <button onClick={handleAddUser}>Add User</button>\n//             <h3>Existing Users</h3>\n//             <ul>\n//                 {users.map((user) => (\n//                     <li key={user._id}>{user.name} - Points: {user.totalPoints} - Rank: {user.rank}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default UserManager;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserManager = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [newUserName, setNewUserName] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [awardedPoints, setAwardedPoints] = useState(null);\n\n  // Fetch leaderboard (users with ranks)\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('/api/leaderboard');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n\n  // Add new user\n  const handleAddUser = async () => {\n    if (newUserName.trim()) {\n      try {\n        await axios.post('/api/users', {\n          name: newUserName\n        });\n        setNewUserName('');\n        fetchLeaderboard();\n      } catch (error) {\n        console.error('Error adding user:', error);\n      }\n    }\n  };\n\n  // Claim points for selected user\n  const handleClaimPoints = async () => {\n    if (!selectedUserId) return;\n    try {\n      const response = await axios.post('/api/claim', {\n        userId: selectedUserId\n      });\n      setAwardedPoints(response.data.pointsClaimed);\n      fetchLeaderboard();\n    } catch (error) {\n      setAwardedPoints(null);\n      alert('Error claiming points');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newUserName,\n      onChange: e => setNewUserName(e.target.value),\n      placeholder: \"Enter new user name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddUser,\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Claim Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUserId,\n      onChange: e => setSelectedUserId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select User --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: user._id,\n        children: user.name\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClaimPoints,\n      disabled: !selectedUserId,\n      children: \"Claim Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), awardedPoints !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Points Awarded:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), \" \", awardedPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - Points: \", user.totalPoints, \" - Rank: \", user.rank]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(UserManager, \"499kTwuIvggqJURluWQo3T9yhB0=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserManager","_s","users","setUsers","newUserName","setNewUserName","selectedUserId","setSelectedUserId","awardedPoints","setAwardedPoints","fetchLeaderboard","response","get","data","error","console","handleAddUser","trim","post","name","handleClaimPoints","userId","pointsClaimed","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","user","_id","disabled","totalPoints","rank","_c","$RefreshReg$"],"sources":["D:/user-ranking-system/frontend/src/components/UserManager.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const UserManager = () => {\n//     const [users, setUsers] = useState([]);\n//     const [newUserName, setNewUserName] = useState('');\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get('/api/users');\n//                 setUsers(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching users:', error);\n//             }\n//         };\n\n//         fetchUsers();\n//     }, []);\n\n//     const handleAddUser = async () => {\n//         if (newUserName.trim()) {\n//             try {\n//                 const response = await axios.post('/api/users', { name: newUserName });\n//                 setUsers([...users, response.data]);\n//                 setNewUserName('');\n//             } catch (error) {\n//                 console.error('Error adding user:', error);\n//             }\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>User Manager</h2>\n//             <input\n//                 type=\"text\"\n//                 value={newUserName}\n//                 onChange={(e) => setNewUserName(e.target.value)}\n//                 placeholder=\"Enter new user name\"\n//             />\n//             <button onClick={handleAddUser}>Add User</button>\n//             <h3>Existing Users</h3>\n//             <ul>\n//                 {users.map((user) => (\n//                     <li key={user._id}>{user.name} - Points: {user.totalPoints} - Rank: {user.rank}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default UserManager;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserManager = () => {\n    const [users, setUsers] = useState([]);\n    const [newUserName, setNewUserName] = useState('');\n    const [selectedUserId, setSelectedUserId] = useState('');\n    const [awardedPoints, setAwardedPoints] = useState(null);\n\n    // Fetch leaderboard (users with ranks)\n    const fetchLeaderboard = async () => {\n        try {\n            const response = await axios.get('/api/leaderboard');\n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching leaderboard:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchLeaderboard();\n    }, []);\n\n    // Add new user\n    const handleAddUser = async () => {\n        if (newUserName.trim()) {\n            try {\n                await axios.post('/api/users', { name: newUserName });\n                setNewUserName('');\n                fetchLeaderboard();\n            } catch (error) {\n                console.error('Error adding user:', error);\n            }\n        }\n    };\n\n    // Claim points for selected user\n    const handleClaimPoints = async () => {\n        if (!selectedUserId) return;\n        try {\n            const response = await axios.post('/api/claim', { userId: selectedUserId });\n            setAwardedPoints(response.data.pointsClaimed);\n            fetchLeaderboard();\n        } catch (error) {\n            setAwardedPoints(null);\n            alert('Error claiming points');\n        }\n    };\n\n    return (\n        <div>\n            <h2>User Manager</h2>\n            {/* Add New User */}\n            <input\n                type=\"text\"\n                value={newUserName}\n                onChange={(e) => setNewUserName(e.target.value)}\n                placeholder=\"Enter new user name\"\n            />\n            <button onClick={handleAddUser}>Add User</button>\n\n            {/* User Selection & Claim Points */}\n            <h3>Claim Points</h3>\n            <select\n                value={selectedUserId}\n                onChange={e => setSelectedUserId(e.target.value)}\n            >\n                <option value=\"\">-- Select User --</option>\n                {users.map(user => (\n                    <option key={user._id} value={user._id}>\n                        {user.name}\n                    </option>\n                ))}\n            </select>\n            <button onClick={handleClaimPoints} disabled={!selectedUserId}>\n                Claim Points\n            </button>\n            {awardedPoints !== null && (\n                <div>\n                    <strong>Points Awarded:</strong> {awardedPoints}\n                </div>\n            )}\n\n            {/* Leaderboard */}\n            <h3>Leaderboard</h3>\n            <ul>\n                {users.map(user => (\n                    <li key={user._id}>\n                        {user.name} - Points: {user.totalPoints} - Rank: {user.rank}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default UserManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}