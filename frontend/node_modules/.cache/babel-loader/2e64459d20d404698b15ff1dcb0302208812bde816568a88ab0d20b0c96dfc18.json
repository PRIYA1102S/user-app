{"ast":null,"code":"var _jsxFileName = \"D:\\\\user-ranking-system\\\\frontend\\\\src\\\\components\\\\UserManager.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const UserManager = () => {\n//     const [users, setUsers] = useState([]);\n//     const [newUserName, setNewUserName] = useState('');\n//     const [selectedUserId, setSelectedUserId] = useState('');\n//     const [awardedPoints, setAwardedPoints] = useState(null);\n\n//     // Fetch leaderboard (users with ranks)\n//     const fetchLeaderboard = async () => {\n//         try {\n//             const response = await axios.get('/api/leaderboard');\n//             setUsers(response.data);\n//         } catch (error) {\n//             console.error('Error fetching leaderboard:', error);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchLeaderboard();\n//     }, []);\n\n//     // Add new user\n//     const handleAddUser = async () => {\n//         if (newUserName.trim()) {\n//             try {\n//                 await axios.post('/api/users', { name: newUserName });\n//                 setNewUserName('');\n//                 fetchLeaderboard();\n//             } catch (error) {\n//                 console.error('Error adding user:', error);\n//             }\n//         }\n//     };\n\n//     // Claim points for selected user\n//     const handleClaimPoints = async () => {\n//         if (!selectedUserId) return;\n//         try {\n//             const response = await axios.post('/api/claim', { userId: selectedUserId });\n//             setAwardedPoints(response.data.pointsClaimed);\n//              fetchLeaderboard();\n//         } catch (error) {\n//             setAwardedPoints(null);\n//             alert('Error claiming points');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>User Manager</h2>\n//             {/* Add New User */}\n//             <input\n//                 type=\"text\"\n//                 value={newUserName}\n//                 onChange={(e) => setNewUserName(e.target.value)}\n//                 placeholder=\"Enter new user name\"\n//             />\n//             <button onClick={handleAddUser}>Add User</button>\n\n//             {/* User Selection & Claim Points */}\n//             <h3>Claim Points</h3>\n//             <select\n//                 value={selectedUserId}\n//                 onChange={e => setSelectedUserId(e.target.value)}\n//             >\n//                 <option value=\"\">-- Select User --</option>\n//                 {users.map(user => (\n//                     <option key={user._id} value={user._id}>\n//                         {user.name}\n//                     </option>\n//                 ))}\n//             </select>\n//             <button onClick={handleClaimPoints} disabled={!selectedUserId}>\n//                 Claim Points\n//             </button>\n//             {awardedPoints !== null && (\n//                 <div>\n//                     <strong>Points Awarded:</strong> {awardedPoints}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default UserManager;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserManager = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [newUserName, setNewUserName] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [awardedPoints, setAwardedPoints] = useState(null);\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('/api/leaderboard');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n    }\n  };\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n  const handleAddUser = async () => {\n    if (newUserName.trim()) {\n      try {\n        await axios.post('/api/users', {\n          name: newUserName\n        });\n        setNewUserName('');\n        fetchLeaderboard();\n      } catch (error) {\n        console.error('Error adding user:', error);\n      }\n    }\n  };\n  const handleClaimPoints = async () => {\n    if (!selectedUserId) return;\n    try {\n      const response = await axios.post('/api/claim', {\n        userId: selectedUserId\n      });\n      setAwardedPoints(response.data.pointsClaimed);\n      fetchLeaderboard();\n    } catch (error) {\n      setAwardedPoints(null);\n      alert('Error claiming points');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-blue-700\",\n      children: \"User Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUserName,\n        onChange: e => setNewUserName(e.target.value),\n        placeholder: \"Enter new user name\",\n        className: \"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded-r hover:bg-blue-700\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2 text-blue-600\",\n        children: \"Claim Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUserId,\n          onChange: e => setSelectedUserId(e.target.value),\n          className: \"border border-gray-300 rounded px-4 py-2 mr-2 focus:outline-none\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select User --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user._id,\n            children: user.name\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClaimPoints,\n          disabled: !selectedUserId,\n          className: `px-4 py-2 rounded ${selectedUserId ? 'bg-green-600 hover:bg-green-700 text-white' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`,\n          children: \"Claim Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), awardedPoints !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-green-700 font-semibold\",\n        children: [\"Points Awarded: \", awardedPoints]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UserManager, \"499kTwuIvggqJURluWQo3T9yhB0=\");\n_c = UserManager;\nexport default UserManager;\nvar _c;\n$RefreshReg$(_c, \"UserManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManager","_s","users","setUsers","newUserName","setNewUserName","selectedUserId","setSelectedUserId","awardedPoints","setAwardedPoints","fetchLeaderboard","response","get","data","error","console","handleAddUser","trim","post","name","handleClaimPoints","userId","pointsClaimed","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","user","_id","disabled","_c","$RefreshReg$"],"sources":["D:/user-ranking-system/frontend/src/components/UserManager.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const UserManager = () => {\n//     const [users, setUsers] = useState([]);\n//     const [newUserName, setNewUserName] = useState('');\n//     const [selectedUserId, setSelectedUserId] = useState('');\n//     const [awardedPoints, setAwardedPoints] = useState(null);\n\n//     // Fetch leaderboard (users with ranks)\n//     const fetchLeaderboard = async () => {\n//         try {\n//             const response = await axios.get('/api/leaderboard');\n//             setUsers(response.data);\n//         } catch (error) {\n//             console.error('Error fetching leaderboard:', error);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchLeaderboard();\n//     }, []);\n\n//     // Add new user\n//     const handleAddUser = async () => {\n//         if (newUserName.trim()) {\n//             try {\n//                 await axios.post('/api/users', { name: newUserName });\n//                 setNewUserName('');\n//                 fetchLeaderboard();\n//             } catch (error) {\n//                 console.error('Error adding user:', error);\n//             }\n//         }\n//     };\n\n//     // Claim points for selected user\n//     const handleClaimPoints = async () => {\n//         if (!selectedUserId) return;\n//         try {\n//             const response = await axios.post('/api/claim', { userId: selectedUserId });\n//             setAwardedPoints(response.data.pointsClaimed);\n//              fetchLeaderboard();\n//         } catch (error) {\n//             setAwardedPoints(null);\n//             alert('Error claiming points');\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>User Manager</h2>\n//             {/* Add New User */}\n//             <input\n//                 type=\"text\"\n//                 value={newUserName}\n//                 onChange={(e) => setNewUserName(e.target.value)}\n//                 placeholder=\"Enter new user name\"\n//             />\n//             <button onClick={handleAddUser}>Add User</button>\n\n//             {/* User Selection & Claim Points */}\n//             <h3>Claim Points</h3>\n//             <select\n//                 value={selectedUserId}\n//                 onChange={e => setSelectedUserId(e.target.value)}\n//             >\n//                 <option value=\"\">-- Select User --</option>\n//                 {users.map(user => (\n//                     <option key={user._id} value={user._id}>\n//                         {user.name}\n//                     </option>\n//                 ))}\n//             </select>\n//             <button onClick={handleClaimPoints} disabled={!selectedUserId}>\n//                 Claim Points\n//             </button>\n//             {awardedPoints !== null && (\n//                 <div>\n//                     <strong>Points Awarded:</strong> {awardedPoints}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default UserManager;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserManager = () => {\n    const [users, setUsers] = useState([]);\n    const [newUserName, setNewUserName] = useState('');\n    const [selectedUserId, setSelectedUserId] = useState('');\n    const [awardedPoints, setAwardedPoints] = useState(null);\n\n    const fetchLeaderboard = async () => {\n        try {\n            const response = await axios.get('/api/leaderboard');\n            setUsers(response.data);\n        } catch (error) {\n            console.error('Error fetching leaderboard:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchLeaderboard();\n    }, []);\n\n    const handleAddUser = async () => {\n        if (newUserName.trim()) {\n            try {\n                await axios.post('/api/users', { name: newUserName });\n                setNewUserName('');\n                fetchLeaderboard();\n            } catch (error) {\n                console.error('Error adding user:', error);\n            }\n        }\n    };\n\n    const handleClaimPoints = async () => {\n        if (!selectedUserId) return;\n        try {\n            const response = await axios.post('/api/claim', { userId: selectedUserId });\n            setAwardedPoints(response.data.pointsClaimed);\n            fetchLeaderboard();\n        } catch (error) {\n            setAwardedPoints(null);\n            alert('Error claiming points');\n        }\n    };\n\n    return (\n       <>\n            <h2 className=\"text-2xl font-bold mb-4 text-blue-700\">User Manager</h2>\n\n            {/* Add New User */}\n            <div className=\"flex mb-6\">\n                <input\n                    type=\"text\"\n                    value={newUserName}\n                    onChange={(e) => setNewUserName(e.target.value)}\n                    placeholder=\"Enter new user name\"\n                    className=\"border border-gray-300 rounded-l px-4 py-2 w-full focus:outline-none\"\n                />\n                <button\n                    onClick={handleAddUser}\n                    className=\"bg-blue-600 text-white px-4 py-2 rounded-r hover:bg-blue-700\"\n                >\n                    Add User\n                </button>\n            </div>\n\n            {/* User Selection & Claim Points */}\n            <div className=\"mb-6\">\n                <h3 className=\"text-lg font-semibold mb-2 text-blue-600\">Claim Points</h3>\n                <div className=\"flex items-center\">\n                    <select\n                        value={selectedUserId}\n                        onChange={e => setSelectedUserId(e.target.value)}\n                        className=\"border border-gray-300 rounded px-4 py-2 mr-2 focus:outline-none\"\n                    >\n                        <option value=\"\">-- Select User --</option>\n                        {users.map(user => (\n                            <option key={user._id} value={user._id}>\n                                {user.name}\n                            </option>\n                        ))}\n                    </select>\n                    <button\n                        onClick={handleClaimPoints}\n                        disabled={!selectedUserId}\n                        className={`px-4 py-2 rounded ${\n                            selectedUserId\n                                ? 'bg-green-600 hover:bg-green-700 text-white'\n                                : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                        }`}\n                    >\n                        Claim Points\n                    </button>\n                </div>\n                {awardedPoints !== null && (\n                    <div className=\"mt-2 text-green-700 font-semibold\">\n                        Points Awarded: {awardedPoints}\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default UserManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}